<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.github.mapper.CourseTypeMapper">

    <!-- 启动my-batis自带缓存  适用于单一客户端，如果是多客户端集群，则my-batis 缓存无用。不适用于统计类查询。
    <cache />
    -->

    <!-- 使用redis缓存来替代 -->
    <!--<cache type="com.github.util.MyBatisRedisCache"></cache>-->

    <resultMap id="BaseResultMap" type="com.github.model.CourseType">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="type_name" property="typeName" jdbcType="INTEGER"/>
        <result column="status" property="status" jdbcType="INTEGER"/>
    </resultMap>

    <sql id="Base_Column_List">
    id, type_name,status
    </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from t_course_type
        where id = #{id,jdbcType=INTEGER}
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_course_type
    where id = #{id,jdbcType=INTEGER}
    </delete>

    <insert id="insert" parameterType="com.github.model.CourseType" useGeneratedKeys="true" keyProperty="id">
        insert into t_course_type (type_name,status)
        values (#{typeName,jdbcType=INTEGER},#{status,jdbcType=INTEGER})
    </insert>

    <insert id="insertSelective" parameterType="com.github.model.CourseType">
        <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into t_course_type
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="typeName != null">
                type_name,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="status != null">
                #{status,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>

    <update id="updateByPrimaryKeySelective" parameterType="com.github.model.CourseType">
        update t_course_type
        <set>
            <if test="typeName != null">
                type_name = #{typeName,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                status = #{status,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>


    <update id="updateByPrimaryKey" parameterType="com.github.model.CourseType">
    update t_course_type
    set type_name = #{typeName,jdbcType=VARCHAR},

      `status` = #{status,jdbcType=INTEGER}

    where id = #{id,jdbcType=INTEGER}
  </update>

    <!--  - 分割线 - -->
    <sql id="where">
        <trim prefix="where" suffixOverrides="and">
            <if test="typeName != null">
                type_name LIKE concat('%',#{typeName,jdbcType=VARCHAR},'%') AND
            </if>
            <!-- 测试使用 -->
            <if test="status != null">
                `status` > #{status,jdbcType=INTEGER}
            </if>
        </trim>
    </sql>


    <select id="selectByCondition" resultMap="BaseResultMap" parameterType="com.github.model.CourseType">
        select
        <include refid="Base_Column_List"/>
        from t_course_type
        <include refid="where"></include>
        order by id asc
    </select>

    <delete id="deleteBatch" parameterType="java.util.List">
        delete from t_course_type
        where id in
        <foreach collection="list" index="index" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

</mapper>